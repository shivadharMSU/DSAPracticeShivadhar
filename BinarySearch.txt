Binary search : 
declare left(l) and right(r)and mid(m) variables
store first variable index on the left and last variable index on the right, mid will be middle elemet will be (l+r)/2;  

loop the code till  left is smaller than or equal to right

if nums[mid ] is greater than target then assign r = mid -1 and mid will be (l+r)/2

if nums[mid ] is lesser than target then assign l = mid -1 and mid will be (l+r)/2

if midd element is target return mid or return -1

class Solution {
    public int search(int[] nums, int target) {  
        int l = 0;
        int r = nums.length-1;;
        int mid = (l+r)/2;

        while(l<=r){  
               if(nums[mid]>target){
                     r = mid-1;
                       mid = (l+r)/2;
               }else if(nums[mid]<target){
                     l = mid+1;
                      mid = (l+r)/2;
               }
               else{
                   return mid;
               }
        }
        return -1;
    }
}